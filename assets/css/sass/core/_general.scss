
/* ++++++++++++++++++++
+++ LAYOUT: GENERAL +++
++++++++++++++++++++ */

body,
br,
dd,
option,
td,
th,
svg {
    margin-top: 0;
}

body {
    -moz-osx-font-smoothing: grayscale;
    -webkit-font-smoothing: antialiased;
    font-feature-settings:"kern" 1;
    font-kerning: normal;
    background-color: $body-color;
    color: $black;
    font: $normal 1em/1.2 $font-body;
    position: relative;
    width: 100%;

    &:after {
        opacity: 0;
        @include transition(opacity 0.2s ease);
        @include animation(spin 1.5s ease infinite);
        margin: -2em 0 0 -2em;
        display: block;
        position: fixed;
        top: 50%;
        content: '';
        left: 50%;
        border: 4px solid $white;
        border-left-color: rgba($black, 0);
        border-radius: 50%;
        width: $gap * 4;
        height: $gap * 4;
        z-index: 110;
        pointer-events: none;
    }
}

body.loading {
    &:before {
        background: $black;
        width: 100%;
        height: 100%;
        top: 0;
        left: 0;
        content: '';
        position: fixed;
        z-index: 100;
    }

    &:after {
        opacity: 1;
    }
}

//=======================================
// Typography
//=======================================

h1,
h2,
h3,
h4,
h5,
h6 {
    @extend %font-header;
    overflow-wrap: break-word;
    word-wrap: break-word;
}

h1 { @extend %h1; }
h2 { @extend %h2; }
h3 { @extend %h3; }
h4 { @extend %h4; }
h5 { @extend %h5; }
h6 { @extend %h6; }

figcaption,
p {
    @extend %font-body;
    overflow-wrap: break-word;
    word-wrap: break-word;

    a {
        @extend %text-hover;
    }
}

a {
    color: inherit;
    text-decoration: none;
}

strong {
    font-weight: $bold;
}

em {
    font-style: italic;
}

hr {
    border: none;
    border-top: $line solid $grey80;
}

img, video {
    display: block;
    height: auto;
    width: 100%;
}

video {
    max-height: 100vh;
}

picture * {
    margin-top: 0;
}

li {
    list-style: none;
}

//=======================================
// Global placeholders and classes
//=======================================

// Full width section
%section {
    display: block;
    margin: 0;
    width: 100%;
    padding: 2em 0;
    overflow: hidden;
}

// Basic layout for a container (usually within a %section)
%container {
    padding: 0 $gap * 2;
    position: relative;
    width: 100%;
}

// Hover styles for links and images
%text-hover {
    @extend %transition;

    &:hover {
        color: $blue;
    }
}

%image-hover {
    @extend %transition;

    &:hover {
        opacity: 0.8;
    }
}

// Gives any first paragraphs a drop cap
%drop-cap {
    & > p:first-child::first-letter {
        float: left;
        font-size: 340%;
        line-height: 0.6;
        margin: 10px 10px 0 0;
    }
}

%shaded-top,
%shaded-bottom {
    position: relative;

    &:before {
        content: "";
        height: 100%;
        left: 0;
        opacity: 0.5;
        position: absolute;
        top: 0;
        width: 100%;
    }
}

%shaded-top:before {
    @include linear-gradient(
        top, to bottom,
        rgba($black, 1) 0%,
        rgba($black, 0.738) 19%,
        rgba($black, 0.541) 34%,
        rgba($black, 0.382) 47%,
        rgba($black, 0.278) 56.5%,
        rgba($black, 0.194) 65%,
        rgba($black, 0.126) 73%,
        rgba($black, 0.075) 80.2%,
        rgba($black, 0.042) 86.1%,
        rgba($black, 0.021) 91%,
        rgba($black, 0.008) 95.2%,
        rgba($black, 0.002) 98.2%,
        rgba($black, 0) 100%
    );
}

%shaded-bottom:before {
    @include linear-gradient(
        bottom, to top,
        rgba($black, 1) 0%,
        rgba($black, 0.738) 19%,
        rgba($black, 0.541) 34%,
        rgba($black, 0.382) 47%,
        rgba($black, 0.278) 56.5%,
        rgba($black, 0.194) 65%,
        rgba($black, 0.126) 73%,
        rgba($black, 0.075) 80.2%,
        rgba($black, 0.042) 86.1%,
        rgba($black, 0.021) 91%,
        rgba($black, 0.008) 95.2%,
        rgba($black, 0.002) 98.2%,
        rgba($black, 0) 100%
    );
}

// Make a flexbox container
%flex {
    display: -ms-flex;
    display: -webkit-flex;
    display: flex;
    flex-flow: row wrap;
}

// Sideways text
%sideways {
    @include transform(rotate(180deg));
    text-align: right;
    text-orientation: sideways;
    -ms-writing-mode: vertical-rl;
    -moz-writing-mode: vertical-rl;
    -webkit-writing-mode: vertical-rl;
    writing-mode: vertical-rl;
}

%glow {
    &:after {
        content: '';
        width: 100%;
        height: 100%;
        position: absolute;
        background: inherit;
        top: $gap / 2;
        filter: blur($gap / 2);
        opacity: 0.75;
        z-index: map-get($zindex, highlight);
    }
}

%full-screen {
    @include transform(translate(-50%, -50%));
    height: auto;
    left: 50%;
    max-width: none;
    min-height: 100%;
    min-width: 100%;
    position: absolute;
    top: 50%;
    width: auto;
}

// Makes any children float left and have consistent margins
.inline-group {
    @extend .clearfix;
    margin-top: -$gap;

    * + & {
        margin-top: 0;
    }

    & > * {
        float: left;
        margin: $gap $gap 0 auto;
    }
}

.text-columns {
    @include columns(15em 2);
    text-align: left;
}

// Hide things
.visually-hidden {
    left: -9999px !important;
    position: fixed !important;
    top: -9999px !important;
    z-index: map-get($zindex, hidden);
}

.spinner {
    @include animation(spin 1.5s linear infinite);
    display: inline-block;
    border: 4px solid rgba($black, 0.1);
    border-left-color: $blue;
    border-radius: 50%;
    width: $gap * 2;
    height: $gap * 2;
}

.clearfix:after {
    clear: both;
    content: "";
    display: table;
}

.crop {
    display: inline-table;
    overflow: hidden;
    padding: 0 1px;
}

.break,
.word,
.letter {
    display: inline-block;
}

.video {
    position: relative;

    &-button {
        @extend %flex;
        cursor: url("../images/play.svg") 45 22, pointer;
        width: 100%;
        height: 100%;
        top: 0;
        left: 0;
        position: absolute;
        align-items: center;
        justify-content: center;
        color: $white;

        &.pause {
            cursor: url("../images/pause.svg") 63 17, pointer;
        }
    }
}
